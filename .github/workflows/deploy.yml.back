name: Prepare Deploy, Build, Run, Test et Finalize Deploy

on:
  push:
    branches:
      - dev

jobs:
  deploy-to-env-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to VPS (env_test)
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            sudo docker stop $(sudo docker ps -a -q)
            sudo docker rm $(sudo docker ps -a -q)
            if [ ! -d ~/env_test/test_deploy ]; then
              mkdir -p ~/env_test
              sudo git clone https://github.com/Legrandpascal/test_deploy.git ~/env_test/test_deploy
            else
              cd ~/env_test/test_deploy
              sudo git config --global --add safe.directory /home/${{ secrets.VPS_USER }}/env_test/test_deploy
              sudo git pull origin main
            fi

  build-env-test:
    runs-on: ubuntu-latest
    needs: deploy-to-env-test

    steps:
      - name: Build Docker Containers (env_test)
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            cd ~/env_test/test_deploy
            sudo docker-compose down 
            sudo docker-compose build --parallel

  run-env-test:
    runs-on: ubuntu-latest
    needs: build-env-test

    steps:
      - name: Start Docker Containers (env_test)
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            cd ~/env_test/test_deploy
            sudo docker-compose up -d

  wait-for-api-env-test:
    runs-on: ubuntu-latest
    needs: run-env-test

    steps:
      - name: Wait for API to be ready (env_test)
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            while ! curl -sSf http://localhost:3001/${{ secrets.ROAD }} > /dev/null; do
              echo "Waiting for API to be ready..."
              sleep 5
            done
            echo "API is ready!"

  test-env-test:
    runs-on: ubuntu-latest
    needs: wait-for-api-env-test

    steps:
      - name: Run Tests (env_test)
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            cd ~/env_test/test_deploy/api
            if ! command -v npm &> /dev/null; then
              echo "npm could not be found, installing..."
              curl -sL https://deb.nodesource.com/setup_20.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi
            sudo npm install
            sudo npm run test
            
            if [ $? -ne 0 ]; then
              echo "Tests failed, exiting with error."
              exit 1
            else
              sudo docker-compose down
              cd ~/env_test
              sudo rm -rf ~/env_test
            fi

  finalize-deploy-on-production:
    runs-on: ubuntu-latest
    needs: test-env-test

    steps:
      - name: Deploy to VPS (pascal)
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            if [ ! -d ~/pascal ]; then
              mkdir -p ~/pascal
              git clone https://github.com/Legrandpascal/test_deploy.git ~/pascal
            else
              cd ~/pascal
              sudo git pull origin main
            fi

      - name: Build Docker Containers (pascal)
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            cd ~/pascal
            sudo docker-compose down 
            sudo docker-compose build --parallel

      - name: Start Docker Containers (pascal)
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            cd ~/pascal
            sudo docker-compose up -d
